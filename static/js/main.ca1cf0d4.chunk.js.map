{"version":3,"sources":["App.js","index.js"],"names":["columns","title","key","dataIndex","width","ellipsis","render","genres","map","ge","display_name","join","arts","ar","tombstone","albums","labels_and_years","year","rating","Wrapper","styled","div","Label","span","App","useQuery","a","axios","get","data","albumsData","isLoading","React","useState","gen","setGen","results","list","li","index","setList","filter","indexOf","filterList","setFilterList","useEffect","orientation","plain","defaultValue","onSelect","val","style","margin","Option","value","dataSource","loading","pagination","pageSize","showSizeChanger","queryClient","QueryClient","ReactDOM","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.ca1cf0d4.chunk.js","sourcesContent":["import { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Divider, Select, Table } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport styled from \"styled-components\";\n\nconst columns = [\n  {\n    title: \"序号\",\n    key: \"index\",\n    dataIndex: \"index\",\n    width: 100,\n    ellipsis: true,\n  },\n  {\n    title: \"类型\",\n    key: \"genres\",\n    dataIndex: \"genres\",\n    ellipsis: true,\n    render: (genres) => (\n      <span>{genres.map((ge) => ge?.display_name)?.join(\" / \")}</span>\n    ),\n    width: 160,\n  },\n  {\n    title: \"专辑名\",\n    key: \"title\",\n    dataIndex: \"title\",\n    ellipsis: true,\n  },\n\n  {\n    title: \"艺术家\",\n    key: \"artists\",\n    dataIndex: \"artists\",\n    render: (arts) => (\n      <span>{arts.map((ar) => ar?.display_name)?.join(\" / \")}</span>\n    ),\n    ellipsis: true,\n  },\n\n  {\n    title: \"发行时间\",\n    key: \"tombstone\",\n    dataIndex: \"tombstone\",\n    render: (tombstone) => tombstone?.albums[0].labels_and_years[0].year,\n    width: 100,\n    ellipsis: true,\n  },\n  {\n    title: \"评分\",\n    key: \"tombstone\",\n    dataIndex: \"tombstone\",\n    render: (tombstone) => tombstone?.albums[0].rating.rating,\n    width: 100,\n    ellipsis: true,\n  },\n];\n\nfunction App() {\n  const { data: albumsData, isLoading } = useQuery(\"object\", async () => {\n    const { data } = await axios.get(\n      \"https://pitchfork.com/api/v2/search/?types=reviews&hierarchy=sections/reviews/albums,channels/reviews/albums&sort=publishdate desc,position asc&isbestnewmusic=true&size=200&start=0\"\n    );\n    return { data };\n  });\n\n  const [gen, setGen] = React.useState(\"All\");\n  const [list, setList] = React.useState(\n    albumsData?.data?.results?.list?.map((li, index) => {\n      return {\n        ...li,\n        index: index + 1,\n      };\n    })\n  );\n  const [filterList, setFilterList] = React.useState(\n    gen === \"All\"\n      ? list\n      : list?.filter(\n          (li) =>\n            li?.genres\n              .map((ge) => ge.display_name)\n              .join(\",\")\n              .indexOf(gen) >= 0\n        )\n  );\n\n  React.useEffect(() => {\n    setList(\n      albumsData?.data?.results?.list?.map((li, index) => {\n        return {\n          ...li,\n          index: index + 1,\n        };\n      })\n    );\n    setFilterList(\n      gen === \"All\"\n        ? list\n        : list?.filter(\n            (li) =>\n              li?.genres\n                .map((ge) => ge.display_name)\n                .join(\",\")\n                .indexOf(gen) >= 0\n          )\n    );\n  }, [list, gen, albumsData, isLoading]);\n\n  return (\n    <Wrapper>\n      <Divider orientation=\"middle\" plain>\n        <Label>Best New Albums of Pitchfork</Label>\n      </Divider>\n      <Select\n        defaultValue=\"All\"\n        onSelect={(val) => setGen(val)}\n        style={{ margin: \"10px 0\", width: \"960px\" }}\n      >\n        <Select.Option value=\"All\">All</Select.Option>\n        <Select.Option value=\"R&B\">R&B</Select.Option>\n        <Select.Option value=\"Pop\">Pop</Select.Option>\n        <Select.Option value=\"Rock\">Rock</Select.Option>\n        <Select.Option value=\"Rap\">Rap</Select.Option>\n      </Select>\n\n      <Table\n        columns={columns}\n        dataSource={filterList}\n        style={{ width: 960 }}\n        loading={isLoading}\n        pagination={{\n          pageSize: 12,\n          showSizeChanger: false,\n        }}\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nconst Label = styled.span`\n  color: #f0f0f0;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}